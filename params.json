{"name":"WebinoDev","tagline":"Webino developer's module for Zend Framework 2","body":"# Webino developer's module <br /> for Zend Framework 2\r\n\r\nModule to ease development of the Webino modules.\r\n\r\n## Features\r\n\r\n- Utility functions\r\n- Smart dependency injection definition generator\r\n- DOM testing\r\n- Mail testing\r\n- Selenium abstract tests testing\r\n- Base classes for Selenium WebDriver tests\r\n  - Authentication testing\r\n  - Forms testing\r\n  - Ajax testing\r\n\r\n## Requirements\r\n\r\n- PHP 5.4\r\n- ZendFramework 2\r\n\r\n## Setup\r\n\r\nOpen terminal and go to your application directory\r\n\r\n1. Use this module only in your development environment\r\n- Run `php composer.phar require webino/webino-dev:dev-develop`\r\n- Add `WebinoDev` to the enabled modules list <br />\r\n  *NOTE: Considering a zf2-skeleton or very similar application.*\r\n\r\n## QuickStart\r\n\r\n### Utility functions\r\n\r\n```php\r\nd();  // var_dump();\r\ndd(); // var_dump();exit;\r\np();  // print_r();\r\npd(); // print_r();exit;\r\npr(); // return print_r();\r\ne();  // throw new \\WebinoDev\\Exception\\DevelopmentException;\r\n```\r\n\r\n### Dependency injection definition generator\r\n\r\nCreate file `bin/definition_generator` in your module, with following code:\r\n\r\n```php\r\n#!/usr/bin/env php\r\n<?php\r\n\r\nnamespace WebinoExample;\r\n\r\nuse WebinoDev\\Di\\Definition\\Generator;\r\n\r\n// Autoloader\r\n$loader = require __DIR__ . '/../vendor/autoload.php';\r\n$loader->add(__NAMESPACE__, __DIR__ . '/../src');\r\n\r\n// Dump DI definition\r\n(new Generator(__DIR__))->compile()->dump();\r\n```\r\n\r\n*NOTE: Assuming `WebinoExample/bin/` and `WebinoExample/vendor/` directories.* <br />\r\n*NOTE: Use your namespace instead of WebinoExample.*\r\n\r\nWith custom paths, relative to vendor directory:\r\n\r\n```php\r\n(new Generator(__DIR__))->compile(['custom/path/1', 'custom/path/2'])->dump();\r\n```\r\n\r\nWith ignored paths:\r\n\r\n```php\r\n(new Generator(__DIR__))->setIgnore(['regex1', 'regex2', 'etc.'])->compile()->dump();\r\n```\r\n\r\n### Selenium WebDriver tests\r\n\r\n```php\r\nuse WebinoDev\\Test\\Selenium\\AbstractTestCase;\r\n\r\nclass HomeTest extends AbstractTestCase\r\n{\r\n    public function testHome()\r\n    {\r\n        $this->openOk('page/path');\r\n\r\n        $this->clickLink('Link example');\r\n\r\n        /**\r\n         * Use following methods to get a page element\r\n         *\r\n         * It's possible to use $this->elementsBy... to get array of elements also.\r\n         */\r\n        $this->elementByClassName('class-name');\r\n\r\n        $this->elementByCssSelector('.class-name tagname');\r\n\r\n        $this->elementById('test-id');\r\n\r\n        $this->elementByLinkText('Test link');\r\n\r\n        $this->elementByName('test_name');\r\n\r\n        $this->elementByPartialLinkText('Link text too long');\r\n\r\n        $this->elementByTagName('tagname);\r\n\r\n        $this->elementByXpath('//test/xpath');\r\n    }\r\n}\r\n```\r\n\r\n#### Testing DOM\r\n\r\n```php\r\nuse WebinoDev\\Test\\DomTrait;\r\n\r\n/**\r\n * Concrete test trait\r\n */\r\nclass DomTestCase extends \\PHPUnit_Framework_TestCase\r\n{\r\n    use DomTrait;\r\n\r\n    public function testDom()\r\n    {\r\n        $xhtml = '<html/>';\r\n        $dom   = $this->createDom($xhtml);\r\n        $elm   = $dom->xpath->query('//html')->item(0);\r\n        $this->assertNotNull($elm);\r\n    }\r\n}\r\n```\r\n\r\n#### Testing authentication\r\n\r\n```php\r\nuse WebinoDev\\Test\\Selenium\\AbstractAuthenticationTestCase;\r\n\r\nclass AuthenticationTest extends AbstractAuthenticationTestCase\r\n{\r\n    public function testAuthentication()\r\n    {\r\n        $this->openOk();\r\n        $this->setAuthSuccessLocator('.authentication-success');\r\n        $this->authenticate();\r\n    }\r\n}\r\n```\r\n\r\n**or use trait**\r\n\r\n```php\r\nuse WebinoDev\\Test\\Selenium\\AbstractTestCase;\r\n\r\nclass AuthenticationTest extends AbstractTestCase\r\n{\r\n    use AuthenticationTrait;\r\n}\r\n```\r\n\r\n#### Testing forms\r\n\r\n```php\r\nuse PHPWebDriver_WebDriverBy as By;\r\nuse WebinoDev\\Test\\Selenium\\AbstractTestCase;\r\n\r\nclass HomeTest extends AbstractTestCase\r\n{\r\n    public function testHome()\r\n    {\r\n        $this->enterInput('email', 'test@example.com', function ($elm) {\r\n            $elm->submit();\r\n        });\r\n\r\n        $this->assertInput('email', 'test@example.com');\r\n\r\n        $this->waitFor(\r\n            function () {\r\n                return $this->elementByClassName('example-success');\r\n            },\r\n            function ($elm) {\r\n                $this->assertSame('example', $elm->text());\r\n            }\r\n        );\r\n    }\r\n}\r\n```\r\n\r\n#### Testing AJAX\r\n\r\n```php\r\nuse PHPWebDriver_WebDriverBy as By;\r\nuse WebinoDev\\Test\\Selenium\\AbstractTestCase;\r\n\r\nclass HomeTest extends AbstractTestCase\r\n{\r\n    public function testHome()\r\n    {\r\n        $this->clickAjaxLink();\r\n\r\n        // or\r\n\r\n        $this->elementByClassName('ajax-btn')->click();\r\n\r\n        $this->waitForAjax();\r\n        // or with delay 2 seconds\r\n        $this->waitForAjax(2);\r\n\r\n        $result = $this->elementByClassName('ajax-result')->text();\r\n        $this->assertSame('expected ajax result', $result);\r\n    }\r\n}\r\n\r\n```\r\n\r\n#### Testing mail\r\n\r\nSupports functional and selenium mail testing.\r\n\r\n##### Functional mail testing\r\n\r\nAssumed that mail messages are saved as files to the virtual filesystem `tmp/mail` directory.\r\n\r\n*NOTE: Use `org\\bovigo\\vfs\\vfsStream::url('root/tmp/mail')` for virtual filesystem directory path.*\r\n\r\n```php\r\nuse WebinoDev\\Test\\Functional\\AbstractMailTestCase;\r\n\r\nclass MailTest extends AbstractMailTestCase\r\n{\r\n    public function testMail()\r\n    {\r\n        // ...\r\n\r\n        $mail = $this->readMail();\r\n        $this->assertNotNull($mail);\r\n        $this->assertSame($expectedSubject, $mail->getSubject());\r\n    }\r\n}\r\n```\r\n\r\n**or use trait**\r\n\r\n```php\r\nuse WebinoDev\\Test\\Functional\\AbstractTestCase;\r\nuse WebinoDev\\Test\\Functional\\MailTrait;\r\n\r\nclass MailTest extends AbstractTestCase\r\n{\r\n    use MailTrait;\r\n\r\n    /**\r\n     * {@inheritDoc}\r\n     */\r\n    protected function setUp()\r\n    {\r\n        $this->setUpMailVfs();\r\n    }\r\n}\r\n```\r\n\r\n##### Testing mail with Selenium\r\n\r\nAssumed that mail messages are saved as files to the `tmp/mail` directory, relative to the application.\r\n\r\n```php\r\nuse WebinoDev\\Test\\Selenium\\AbstractMailTestCase;\r\n\r\nclass MailTest extends AbstractMailTestCase\r\n{\r\n    public function testMail()\r\n    {\r\n        // ...\r\n\r\n        $mail = $this->readMail();\r\n        $this->assertNotNull($mail);\r\n        $this->assertSame($expectedSubject, $mail->getSubject());\r\n    }\r\n}\r\n```\r\n\r\n**or use trait**\r\n\r\n```php\r\nuse WebinoDev\\Test\\Selenium\\AbstractTestCase;\r\nuse WebinoDev\\Test\\Selenium\\MailTrait;\r\n\r\nclass MailTest extends AbstractTestCase\r\n{\r\n    use MailTrait;\r\n\r\n    /**\r\n     * {@inheritDoc}\r\n     */\r\n    protected function setUp()\r\n    {\r\n        parent::setUp();\r\n        $this->setUpMailDir();\r\n    }\r\n\r\n    /**\r\n     * {@inheritDoc}\r\n     */\r\n    protected function tearDown()\r\n    {\r\n        parent::tearDown();\r\n        $this->tearDownMailDir();\r\n    }\r\n}\r\n```\r\n\r\n#### Testing abstract selenium tests\r\n\r\n```php\r\nuse WebinoDev\\Test\\Functional\\SeleniumTestTrait;\r\n\r\nclass AbstractSeleniumTestCaseTest extends \\PHPUnit_Framework_TestCase\r\n{\r\n    use SeleniumTestTrait;\r\n\r\n    protected $object;\r\n\r\n    protected function setUp()\r\n    {\r\n        $this->setUpWebDriver();\r\n        $this->object = new SeleniumTestCase;\r\n        $this->object->session = $this->getWebDriverSession();\r\n    }\r\n```\r\n\r\n## Development\r\n\r\nWe will appreciate any contributions on development of this module.\r\n\r\nLearn [How to develop Webino modules](https://github.com/webino/Webino/wiki/How-to-develop-Webino-modules)\r\n\r\n## Addendum\r\n\r\nPlease, if you are interested in this Zend Framework module report any issues and don't hesitate to contribute.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}